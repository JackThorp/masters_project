{{>Contract}}

<script>
      setInterval(
        function () {
          console.log("in setInterval, sending in new data");
          var newRandomPrice = Math.round(Math.random() * 100);
          var usableKeystore = ethlightjs.keystore.deserialize(JSON.stringify(globalKeystore));

          try {
              var privkey = usableKeystore.exportPrivateKey(
              walletaddress.value, '{{{globalPassword}}}');

              console.log("privkey: " + privkey);
          } catch (e) {
              $('#passwordModal').modal('show');
          }
      
         contract.state['update'].apply(null,[newRandomPrice]).txParams({
            value : Units.ethValue(0).in("ether")
          }).callFrom(privkey).then(afterTX);
        }
       , 2000
      );
</script>  