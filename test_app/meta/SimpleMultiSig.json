{
  "code": "contract SimpleMultiSig {\n     address alice1;\n     address alice2;\n     address bob;\n     uint numSigned = 0;\n     bytes32 error;\n     bool registeredYet;\n     mapping (address => bool) signedYet;\n\n     function SimpleMultiSig() {\n       bob = msg.sender;\n       registeredYet = false;\n     }\n\n     function register(address registerAlice1, address registerAlice2) {\n       if (msg.sender == bob && registeredYet == false) {\n           alice1 = registerAlice1;\n           alice2 = registerAlice2;\n           registeredYet = true;\n       } else if (msg.sender == bob) {\n           error = \"registered already\";\n       } else {\n         error = \"you are not bob!\";\n       }\n   }\n\n   function withdraw(address to) {\n     if ((msg.sender == alice1 || msg.sender == alice2) && numSigned >= 2) {\n        to.send(this.balance);\n        numSigned = 0;\n       signedYet[alice1] = signedYet[alice2] = signedYet[bob] = false;\n     } else {\n        error = \"cannot withdraw yet!\";\n     }\n   }\n\n   function addSignature() {\n     if (msg.sender == alice1 && signedYet[alice1]==false) {\n       signedYet[alice1] = true;\n       numSigned++;\n     } else if (msg.sender == alice2 && signedYet[alice2]==false) {\n       signedYet[alice2] = true;\n       numSigned++;\n     } else if (msg.sender == bob && signedYet[bob]==false) {\n       signedYet[bob] = true;\n       numSigned++;\n     } else {\n       error = 'unknown address';\n     }\n   }\n}\n",
  "name": "SimpleMultiSig",
  "vmCode": "606060405260006003600050555b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506000600560006101000a81548160ff021916908302179055505b610876806100616000396000f30060606040526000357c01000000000000000000000000000000000000000000000000000000009004806351cff8d91461004f5780635614d3e014610062578063aa6773541461006f5761004d565b005b610060600480359060200150610223565b005b61006d600450610495565b005b610086600480359060200180359060200150610088565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156100f457506000600560009054906101000a900460ff16145b1561016d5781600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506001600560006101000a81548160ff0219169083021790555061021e565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101f2577f7265676973746572656420616c7265616479000000000000000000000000000060046000508190555061021d565b7f796f7520617265206e6f7420626f6221000000000000000000000000000000006004600050819055505b5b5b5050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102cc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80156102de5750600260036000505410155b15610466578073ffffffffffffffffffffffffffffffffffffffff1660003073ffffffffffffffffffffffffffffffffffffffff1631604051809050600060405180830381858888f19350505050506000600360005081905550600060066000506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690830217905560066000506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690830217905560066000506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690830217905550610491565b7f63616e6e6f7420776974686472617720796574210000000000000000000000006004600050819055505b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561054d5750600060066000506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16145b156105d057600160066000506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908302179055506003600081815054809291906001019190505550610873565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156106885750600060066000506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16145b1561070b57600160066000506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908302179055506003600081815054809291906001019190505550610872565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156107c35750600060066000506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16145b1561084657600160066000506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908302179055506003600081815054809291906001019190505550610871565b7f756e6b6e6f776e206164647265737300000000000000000000000000000000006004600050819055505b5b5b5b56",
  "symTab": {
    "bob": {
      "atStorageKey": "2",
      "bytesUsed": "14",
      "jsType": "Address",
      "solidityType": "address"
    },
    "signedYet": {
      "atStorageKey": "6",
      "mappingKey": {
        "bytesUsed": "14",
        "jsType": "Address",
        "solidityType": "address"
      },
      "bytesUsed": "20",
      "jsType": "Mapping",
      "mappingValue": {
        "bytesUsed": "1",
        "jsType": "Bool",
        "solidityType": "bool"
      },
      "solidityType": "mapping (address => bool)"
    },
    "error": {
      "atStorageKey": "4",
      "bytesUsed": "20",
      "jsType": "Bytes",
      "solidityType": "bytes32"
    },
    "alice1": {
      "atStorageKey": "0",
      "bytesUsed": "14",
      "jsType": "Address",
      "solidityType": "address"
    },
    "register": {
      "functionDomain": [
        {
          "atStorageKey": "0",
          "bytesUsed": "14",
          "jsType": "Address",
          "solidityType": "address"
        },
        {
          "atStorageKey": "1",
          "bytesUsed": "14",
          "jsType": "Address",
          "solidityType": "address"
        }
      ],
      "functionArgs": [
        "registerAlice1",
        "registerAlice2"
      ],
      "functionHash": "aa677354",
      "bytesUsed": "0",
      "jsType": "Function",
      "solidityType": "function(address,address) returns ()"
    },
    "numSigned": {
      "atStorageKey": "3",
      "bytesUsed": "20",
      "jsType": "Int",
      "solidityType": "uint256"
    },
    "withdraw": {
      "functionDomain": [
        {
          "atStorageKey": "0",
          "bytesUsed": "14",
          "jsType": "Address",
          "solidityType": "address"
        }
      ],
      "functionArgs": [
        "to"
      ],
      "functionHash": "51cff8d9",
      "bytesUsed": "0",
      "jsType": "Function",
      "solidityType": "function(address) returns ()"
    },
    "addSignature": {
      "functionDomain": [],
      "functionArgs": [],
      "functionHash": "5614d3e0",
      "bytesUsed": "0",
      "jsType": "Function",
      "solidityType": "function() returns ()"
    },
    "alice2": {
      "atStorageKey": "1",
      "bytesUsed": "14",
      "jsType": "Address",
      "solidityType": "address"
    },
    "registeredYet": {
      "atStorageKey": "5",
      "bytesUsed": "1",
      "jsType": "Bool",
      "solidityType": "bool"
    }
  }
}